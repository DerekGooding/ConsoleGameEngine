<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenSlideSharp</name>
    </assembly>
    <members>
        <member name="T:OpenSlideSharp.AssociatedImage">
            <summary>
            Associated image
            </summary>
        </member>
        <member name="M:OpenSlideSharp.AssociatedImage.#ctor(OpenSlideSharp.ImageDimension,System.Byte[])">
            <summary>
            
            </summary>
            <param name="dimensions"></param>
            <param name="data"></param>
        </member>
        <member name="P:OpenSlideSharp.AssociatedImage.Dimensions">
            <summary>
            Associated image dimensions
            </summary>
        </member>
        <member name="P:OpenSlideSharp.AssociatedImage.Data">
            <summary>
            Associated image ARGB data
            </summary>
        </member>
        <member name="T:OpenSlideSharp.DeepZoomGenerator">
            <summary>
            Deep zoom generator for OpenSlide image.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.Image">
            <summary>
            Get the underlying OpenSlide image object.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.#ctor(OpenSlideSharp.OpenSlideImage,System.Int32,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Initialize a <see cref="T:OpenSlideSharp.DeepZoomGenerator"/> instance with the specified parameters.
            </summary>
            <param name="image">The OpenSlide image.</param>
            <param name="tileSize">The tile size paramter.</param>
            <param name="overlap">The overlap paramter.</param>
            <param name="limitBounds">Whether image bounds should be respected.</param>
            <param name="isOwner">Whether the OpenSlide image instance should be disposed when this <see cref="T:OpenSlideSharp.DeepZoomGenerator"/> instance is disposed.</param>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.LevelCount">
            <summary>
            The Count of the deep zoom level.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.LevelTiles">
            <summary>
            The number of tiles in each level.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.LevelDimensions">
            <summary>
            The dimensions of each level.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileCount">
            <summary>
            The total number of tiles.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.GetTile(System.Int32,System.Int32,System.Int32,OpenSlideSharp.DeepZoomGenerator.TileInfo@)">
            <summary>
            Get the pre-multiplied BGRA data for the specified tile.
            </summary>
            <param name="level">The deep zoom level.</param>
            <param name="col">Horizontal tile index.</param>
            <param name="row">Vertical tile index.</param>
            <param name="info">Information of the specified tile.</param>
            <returns>Pre-multiplied BGRA image data.</returns>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.GetTileInfo(System.Int32,System.Int32,System.Int32)">
            <summary>
            Get information of the specified tile.
            </summary>
            <param name="level">The deep zoom level.</param>
            <param name="col">Horizontal tile index.</param>
            <param name="row">Vertical tile index.</param>
            <returns>Information of the specified tile.</returns>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.GetDzi(System.String)">
            <summary>
            Get the dzi file content.
            </summary>
            <param name="format">The iamge format.</param>
            <returns>Dzi file content.</returns>
        </member>
        <member name="T:OpenSlideSharp.DeepZoomGenerator.TileInfo">
            <summary>
            Information of a tile.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.X">
            <summary>
            The X coordinate in the base level.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.Y">
            <summary>
            The Y coordinate in the base level.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.SlideLevel">
            <summary>
            The corresponding level in the OpenSlide image.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.Width">
            <summary>
            Width of the image to read from OpenSlide image.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.Height">
            <summary>
            Height of the image to read from OpenSlide image.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.TileWidth">
            <summary>
            The width of the deep zoom tile.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.DeepZoomGenerator.TileInfo.TileHeight">
            <summary>
            The height of the deep zoom tile.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:OpenSlideSharp.DeepZoomGenerator.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:OpenSlideSharp.TileDimensions">
            <summary>
            Tile position
            </summary>
        </member>
        <member name="P:OpenSlideSharp.TileDimensions.Cols">
            <summary>
            tile col
            </summary>
        </member>
        <member name="P:OpenSlideSharp.TileDimensions.Rows">
            <summary>
            tile row
            </summary>
        </member>
        <member name="M:OpenSlideSharp.TileDimensions.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="_cols">cols</param>
            <param name="_rows">rows</param>
        </member>
        <member name="M:OpenSlideSharp.TileDimensions.Deconstruct(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="cols"></param>
            <param name="rows"></param>
        </member>
        <member name="T:OpenSlideSharp.ImageDimension">
            <summary>
            Represents the image dimensions
            </summary>
        </member>
        <member name="P:OpenSlideSharp.ImageDimension.Width">
            <summary>
            The width of the image.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.ImageDimension.Height">
            <summary>
            The height of the image.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.ImageDimension.#ctor(System.Int64,System.Int64)">
            <summary>
            Initialize a new <see cref="T:OpenSlideSharp.ImageDimension"/> struct.
            </summary>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
        </member>
        <member name="M:OpenSlideSharp.ImageDimension.Deconstruct(System.Int64@,System.Int64@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:OpenSlideSharp.ImageDimension.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenSlideSharp.Interop.CustomStringArrayMarshaler">
            <summary>
            char** - string[] marshaler
            </summary>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.GetInstance(System.String)">
            <summary>
            Get instance.
            </summary>
            <param name="cookie"><see cref="M:System.Text.Encoding.GetEncodings"/>'s BodyName,default is <see cref="P:System.Text.Encoding.Default"/>.BodyName</param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.MarshalManagedToNative(System.Object)">
            <summary>
            Marshal managed to native.
            </summary>
            <param name="managedObj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.MarshalNativeToManaged(System.IntPtr)">
            <summary>
            Marshal native to managed.
            </summary>
            <param name="pNativeData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.CleanUpNativeData(System.IntPtr)">
            <summary>
            Clean up native data.
            </summary>
            <param name="pNativeData"></param>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.CleanUpManagedData(System.Object)">
            <summary>
            Clean up managed data.
            </summary>
            <param name="managedObj"></param>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringArrayMarshaler.GetNativeDataSize">
            <summary>
            Get native data size.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenSlideSharp.Interop.CustomStringMarshaler">
            <summary>
            char* - string marshaler.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.GetInstance(System.String)">
            <summary>
            Get instance.
            </summary>
            <param name="cookie"><see cref="M:System.Text.Encoding.GetEncodings"/>'s BodyName,default is <see cref="P:System.Text.Encoding.Default"/>.BodyName</param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.MarshalManagedToNative(System.Object)">
            <summary>
            Marshal managed to native.
            </summary>
            <param name="managedObj"></param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.MarshalNativeToManaged(System.IntPtr)">
            <summary>
            Marshal native to managed.
            </summary>
            <param name="pNativeData"></param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.CleanUpNativeData(System.IntPtr)">
            <summary>
            Clean up native data.
            </summary>
            <param name="pNativeData"></param>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.CleanUpManagedData(System.Object)">
            <summary>
            Clean up managed data.
            </summary>
            <param name="managedObj"></param>
        </member>
        <member name="M:OpenSlideSharp.Interop.CustomStringMarshaler.GetNativeDataSize">
            <summary>
            Get native data size.
            </summary>
            <returns></returns>
        </member>
        <member name="T:OpenSlideSharp.Interop.NativeMethods">
            <summary>
            The API for the OpenSlide library.
            OpenSlide is a C library that provides a simple interface to read
            whole-slide images(also known as virtual slides). See
            https://openslide.org/ for more details.
            </summary>
            <remarks>
            All functions except <see cref="M:OpenSlideSharp.Interop.NativeMethods.Close(System.IntPtr)"/> are thread-safe.
            See the <see cref="M:OpenSlideSharp.Interop.NativeMethods.Close(System.IntPtr)"/> documentation for its restrictions.
            </remarks>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.LibraryName">
            <summary>
            library name
            </summary>
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.DetectVendor(System.String)">
             <summary>
             Quickly determine whether a whole slide image is recognized.
             </summary>
             <remarks>
             If OpenSlide recognizes the file referenced by <paramref name="filename"/>, 
             return a string identifying the slide format vendor.This is equivalent to the
             value of the <see cref="F:OpenSlideSharp.Interop.NativeMethods.VENDOR"/> property. Calling
             <see cref="M:OpenSlideSharp.Interop.NativeMethods.Open(System.String)"/> on this file will return a valid 
             OpenSlide object or an OpenSlide object in error state.
            
             Otherwise, return <see langword="null"/>.Calling <see cref="M:OpenSlideSharp.Interop.NativeMethods.Open(System.String)"/> on this file will also
             return <see langword="null"/>.</remarks>
             <param name="filename">The filename to check. On Windows, this must be in UTF-8.</param>
             <returns>An identification of the format vendor for this file, or NULL.</returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.Open(System.String)">
            <summary>
            Open a whole slide image.
            </summary>
            <remarks>
            This function can be expensive; avoid calling it unnecessarily.  For 
            example, a tile server should not call <see cref="M:OpenSlideSharp.Interop.NativeMethods.Open(System.String)"/>
            on every tile request.Instead, it should maintain a cache of OpenSlide 
            objects and reuse them when possible.
            </remarks>
            <param name="filename">The filename to open.  On Windows, this must be in UTF-8.</param>
            <returns>
            On success, a new OpenSlide object. 
            If the file is not recognized by OpenSlide, NULL. 
            If the file is recognized but an error occurred, an OpenSlide 
            object in error state.
            </returns>
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetLevelCount(System.IntPtr)">
            <summary>
            Get the number of levels in the whole slide image.
            </summary>
            <param name="osr">The OpenSlide object.</param>
            <return>The number of levels, or -1 if an error occurred.</return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetLevel0Dimensions(System.IntPtr,System.Int64@,System.Int64@)">
            <summary>
            Get the dimensions of level 0 (the largest level). Exactly
            equivalent to calling openslide_get_level_dimensions(osr, 0, w, h).
            </summary>
            <param name="osr">The OpenSlide object.</param> 
            <param name="w">The width of the image, or -1 if an error occurred.</param>
            <param name="h">The height of the image, or -1 if an error occurred.</param> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetLevelDimensions(System.IntPtr,System.Int32,System.Int64@,System.Int64@)">
            <summary>
            Get the dimensions of a level.
            </summary>
            <param name="osr">The OpenSlide object.</param> 
            <param name="level">The desired level.</param>
            <param name="w">The width of the image, or -1 if an error occurred or the level was out of range.</param>
            <param name="h">The height of the image, or -1 if an error occurred or the level was out of range.</param> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetLevelDownsample(System.IntPtr,System.Int32)">
            <summary>
            Get the downsampling factor of a given level.
            </summary>
            <param name="osr">The OpenSlide object.</param>
            <param name="level">The desired level.</param>
            <return>
            The downsampling factor for this level, or -1.0 if an error occurred
            or the level was out of range.
            </return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetBestLevelForDownsample(System.IntPtr,System.Double)">
            <summary>
            Get the best level to use for displaying the given downsample.
            </summary>
            <param name="osr">The OpenSlide object.</param> 
            <param name="downsample">The downsample factor.</param> 
            <return>
            The level identifier, or -1 if an error occurred.
            </return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.ReadRegion(System.IntPtr,System.Byte*,System.Int64,System.Int64,System.Int32,System.Int64,System.Int64)">
            <summary>
            Copy pre-multiplied ARGB data from a whole slide image.
            </summary>
            <remarks>
            This function reads and decompresses a region of a whole slide
            image into the specified memory location.<paramref name="dest"/> 
            must be a valid pointer to enough memory to hold the region, at 
            least (<paramref name="w"/> * <paramref name="h"/> * 4) bytes 
            in length. If an error occurs or has occurred, then the memory
            pointed to by <paramref name="dest"/> will be cleared.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <param name="dest">The destination buffer for the ARGB data.</param> 
            <param name="x">The top left x-coordinate, in the level 0 reference frame.</param>
            <param name="y">The top left y-coordinate, in the level 0 reference frame.</param>
            <param name="level">The desired level.</param>
            <param name="w">The width of the region. Must be non-negative.</param> 
            <param name="h">The height of the region. Must be non-negative.</param> 
            
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.ReadRegion(System.IntPtr,System.Byte[],System.Int64,System.Int64,System.Int32,System.Int64,System.Int64)">
            <summary>
            Copy pre-multiplied ARGB data from a whole slide image.
            </summary>
            <remarks>
            This function reads and decompresses a region of a whole slide
            image into the specified memory location.<paramref name="dest"/> 
            must be a valid pointer to enough memory to hold the region, at 
            least (<paramref name="w"/> * <paramref name="h"/> * 4) bytes 
            in length. If an error occurs or has occurred, then the memory
            pointed to by <paramref name="dest"/> will be cleared.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <param name="dest">The destination buffer for the ARGB data.</param> 
            <param name="x">The top left x-coordinate, in the level 0 reference frame.</param>
            <param name="y">The top left y-coordinate, in the level 0 reference frame.</param>
            <param name="level">The desired level.</param>
            <param name="w">The width of the region. Must be non-negative.</param> 
            <param name="h">The height of the region. Must be non-negative.</param> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.Close(System.IntPtr)">
            <summary>
            Close an OpenSlide object.
            </summary>
            <remarks>
            No other threads may be using the object.
            After this call returns, the object cannot be used anymore.
            </remarks>
            <param name="osr">The OpenSlide object.</param>
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetError(System.IntPtr)">
            <summary>
            Get the current error string.
            </summary>
            <remarks>
            For a given OpenSlide object, once this function returns a non-NULL
            value, the only useful operation on the object is to call
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.Close(System.IntPtr)"/> to free its resources.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <return>
            A string describing the original error that caused
            the problem, or NULL if no error has occurred.
            </return> 
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.COMMENT">
            <summary>
            The name of the property containing a slide's comment, if any.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.VENDOR">
            <summary>
            The name of the property containing an identification of the vendor.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.QUICKHASH1">
            <summary>
            The name of the property containing the "quickhash-1" sum.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.BACKGROUND_COLOR">
            <summary>
            The name of the property containing a slide's background color, if any.
            It is represented as an RGB hex triplet.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.OBJECTIVE_POWER">
            <summary>
            The name of the property containing a slide's objective power, if known.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.MPP_X">
            <summary>
            The name of the property containing the number of microns per pixel in
            the X dimension of level 0, if known.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.MPP_Y">
            <summary>
            The name of the property containing the number of microns per pixel in
            the Y dimension of level 0, if known.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.BOUNDS_X">
            <summary>
            The name of the property containing the X coordinate of the rectangle
            bounding the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.BOUNDS_Y">
            <summary>
            The name of the property containing the Y coordinate of the rectangle
            bounding the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.BOUNDS_WIDTH">
            <summary>
            The name of the property containing the width of the rectangle bounding
            the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="F:OpenSlideSharp.Interop.NativeMethods.BOUNDS_HEIGHT">
            <summary>
            The name of the property containing the height of the rectangle bounding
            the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetPropertyNames(System.IntPtr)">
            <summary>
            Get the NULL-terminated array of property names.
            </summary>
            <remarks>
            Certain vendor-specific metadata properties may exist
            within a whole slide image. They are encoded as key-value
            pairs. This call provides a list of names as strings
            that can be used to read properties with 
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetPropertyValue(System.IntPtr,System.String)"/>.
            </remarks>
            <param name="osr">The OpenSlide object.</param>
            <return> 
            A NULL-terminated string array of property names, or 
            an empty array if an error occurred.
            </return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetPropertyValue(System.IntPtr,System.String)">
            <summary>
            Get the value of a single property.
            </summary>
            <remarks>
            Certain vendor-specific metadata properties may exist
            within a whole slide image. They are encoded as key-value
            pairs. This call provides the value of the property given
            by <paramref name="name"/>.
            </remarks>
            <param name="osr">The OpenSlide object.</param>
            <param name="name">The name of the desired property. Must
            be a valid name as given by <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetPropertyNames(System.IntPtr)"/>.
            </param>
            <return>
            The value of the named property, or NULL if the property 
            doesn't exist or an error occurred.
            </return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageNames(System.IntPtr)">
            <summary>
            Get the NULL-terminated array of associated image names.
            </summary>
            <remarks>
            Certain vendor-specific associated images may exist
            within a whole slide image. They are encoded as key-value
            pairs. This call provides a list of names as strings
            that can be used to read associated images with
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageDimensions(System.IntPtr,System.String,System.Int64@,System.Int64@)"/> and <see cref=
            "M:OpenSlideSharp.Interop.NativeMethods.ReadAssociatedImage(System.IntPtr,System.String,System.Byte[])"/>.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <return>
            A NULL-terminated string array of associated image names, or
            an empty array if an error occurred.
            </return> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageDimensions(System.IntPtr,System.String,System.Int64@,System.Int64@)">
            <summary>
            Get the dimensions of an associated image.
            </summary>
            <remarks>
            This function returns the width and height of an associated image
            associated with a whole slide image. Once the dimensions are known,
            use <see cref="M:OpenSlideSharp.Interop.NativeMethods.ReadAssociatedImage(System.IntPtr,System.String,System.Byte[])"/>
            to read the image.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <param name="name">The name of the desired associated image. Must be
            a valid name as given by openslide_get_associated_image_names().</param> 
            <param name="w">The width of the associated image, or -1 if an error occurred.</param>
            <param name="h">The height of the associated image, or -1 if an error occurred.</param> 
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.ReadAssociatedImage(System.IntPtr,System.String,System.Byte*)">
            <summary>
            Copy pre-multiplied ARGB data from an associated image.
            </summary>
            <remarks>
            This function reads and decompresses an associated image associated
            with a whole slide image. <paramref name="dest"/> must be a valid 
            pointer to enough memory to hold the image, at least (width * 
            height * 4) bytes in length.  Get the width and height with
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageDimensions(System.IntPtr,System.String,System.Int64@,System.Int64@)"/>. This call does nothing if an error occurred.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <param name="name">The name of the desired associated image. 
            Must be a valid name as given by 
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageNames(System.IntPtr)"/>.
            </param> 
            <param name="dest">The destination buffer for the ARGB data.</param> 
            
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.ReadAssociatedImage(System.IntPtr,System.String,System.Byte[])">
            <summary>
            Copy pre-multiplied ARGB data from an associated image.
            </summary>
            <remarks>
            This function reads and decompresses an associated image associated
            with a whole slide image. <paramref name="dest"/> must be a valid 
            pointer to enough memory to hold the image, at least (width * 
            height * 4) bytes in length.  Get the width and height with
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageDimensions(System.IntPtr,System.String,System.Int64@,System.Int64@)"/>. This call does nothing if an error occurred.
            </remarks>
            <param name="osr">The OpenSlide object.</param> 
            <param name="name">The name of the desired associated image. 
            Must be a valid name as given by 
            <see cref="M:OpenSlideSharp.Interop.NativeMethods.GetAssociatedImageNames(System.IntPtr)"/>.
            </param> 
            <param name="dest">The destination buffer for the ARGB data.</param> 
            
        </member>
        <member name="M:OpenSlideSharp.Interop.NativeMethods.GetVersion">
            <summary>
            Get the version of the OpenSlide library.
            </summary>
            <return>A string describing the OpenSlide version.</return> 
        </member>
        <member name="T:OpenSlideSharp.OpenSlideException">
            <summary>
            The exception that is thrown when OpenSlide library call failed.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenSlideSharp.OpenSlideException"/> class.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenSlideSharp.OpenSlideException"/> class with a specified error message.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenSlideSharp.OpenSlideException"/> class with a specified error message and a reference to the inner exception that is the cause of this exception
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException"/> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:OpenSlideSharp.OpenSlideImage">
            <summary>
            openslide warpper
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Handle">
            <summary>
            openslide_t*
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.DetectVendor(System.String)">
             <summary>
             Quickly determine whether a whole slide image is recognized.
             </summary>
             <remarks>
             If OpenSlide recognizes the file referenced by <paramref name="filename"/>, 
             return a string identifying the slide format vendor.This is equivalent to the
             value of the <see cref="F:OpenSlideSharp.Interop.NativeMethods.VENDOR"/> property. Calling
             <see cref="M:OpenSlideSharp.OpenSlideImage.Open(System.String)"/> on this file will return a valid 
             OpenSlide object or an OpenSlide object in error state.
            
             Otherwise, return <see langword="null"/>.Calling <see cref="M:OpenSlideSharp.OpenSlideImage.Open(System.String)"/> on this file will also
             return <see langword="null"/>.</remarks>
             <param name="filename">The filename to check. On Windows, this must be in UTF-8.</param>
             <returns>An identification of the format vendor for this file, or NULL.</returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.#ctor(System.IntPtr,System.Boolean)">
            <summary>
            
            </summary>
            <param name="handle"></param>
            <param name="isOwner">close handle when disposed</param>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Initialize(System.String)">
            <summary>
            Add .dll directory to PATH
            </summary>
            <param name="path"></param>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Open(System.String)">
            <summary>
            Open.
            </summary>
            <param name="filename"></param>
            <returns></returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.LevelCount">
            <summary>
            Get the number of levels in the whole slide image.
            </summary>
            <return>The number of levels, or -1 if an error occurred.</return> 
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Dimensions">
            <summary>
            Get the dimensions of level 0 (the largest level). Exactly
            equivalent to calling GetLevelDimensions(0).
            </summary>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Comment">
            <summary>
            The value of the property containing a slide's comment, if any.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Vendor">
            <summary>
            The value of the property containing an identification of the vendor.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Quickhash1">
            <summary>
            The value of the property containing the "quickhash-1" sum.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.BackgroundColor">
            <summary>
            The value of the property containing a slide's background color, if any.
            It is represented as an RGB hex triplet.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.ObjectivePower">
            <summary>
            The value of the property containing a slide's objective power, if known.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.MicronsPerPixelX">
            <summary>
            The value of the property containing the number of microns per pixel in
            the X dimension of level 0, if known.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.MicronsPerPixelY">
            <summary>
            The value of the property containing the number of microns per pixel in
            the Y dimension of level 0, if known.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.BoundsX">
            <summary>
            The value of the property containing the X coordinate of the rectangle
            bounding the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.BoundsY">
            <summary>
            The value of the property containing the Y coordinate of the rectangle
            bounding the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.BoundsWidth">
            <summary>
            The value of the property containing the width of the rectangle bounding
            the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.BoundsHeight">
            <summary>
            The value of the property containing the height of the rectangle bounding
            the non-empty region of the slide, if available.
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetLevelDimension(System.Int32)">
            <summary>
            Get the dimensions of a level.
            </summary>
            <param name="level">The desired level.</param>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetLevelDimensions">
            <summary>
            Get all level dimensions.
            </summary>
            <returns></returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetLevelDownsample(System.Int32)">
            <summary>
            Get the downsampling factor of a given level.
            </summary>
            <param name="level">The desired level.</param>
            <return>
            The downsampling factor for this level, or -1.0 if an error occurred
            or the level was out of range.
            </return> 
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetBestLevelForDownsample(System.Double)">
            <summary>
            Get the best level to use for displaying the given downsample.
            </summary>
            <param name="downsample">The downsample factor.</param> 
            <return>The level identifier, or -1 if an error occurred.</return> 
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.ReadRegion(System.Int32,System.Int64,System.Int64,System.Int64,System.Int64)">
            <summary>
            Copy pre-multiplied BGRA data from a whole slide image.
            </summary>
            <param name="level">The desired level.</param>
            <param name="x">The top left x-coordinate, in the level 0 reference frame.</param>
            <param name="y">The top left y-coordinate, in the level 0 reference frame.</param>
            <param name="width">The width of the region. Must be non-negative.</param>
            <param name="height">The height of the region. Must be non-negative.</param>
            <returns>The pixel data of this region.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"/>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.TryReadRegion(System.Int32,System.Int64,System.Int64,System.Int64,System.Int64,System.Byte[]@)">
            <summary>
            Copy pre-multiplied BGRA data from a whole slide image.
            </summary>
            <param name="level">The desired level.</param>
            <param name="x">The top left x-coordinate, in the level 0 reference frame.</param>
            <param name="y">The top left y-coordinate, in the level 0 reference frame.</param>
            <param name="width">The width of the region. Must be non-negative.</param>
            <param name="height">The height of the region. Must be non-negative.</param>
            <param name="data">The BGRA pixel data of this region.</param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Close">
            <summary>
            Close an OpenSlide object.
            </summary>
            <remarks>
            No other threads may be using the object.
            After this call returns, the object cannot be used anymore.
            </remarks>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.Property(System.String)">
            <summary>
            Get the value of a property.
            </summary>
            <param name="name">property name</param>
            <returns></returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetPropertyNames">
            <summary>
            Get the array of property names. 
            </summary>
            <returns>The array of property names</returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.TryGetProperty(System.String,System.String@)">
            <summary>
            Gets the property value.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
            <returns>True if the property of the specified name exists. Otherwise, false.</returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetProperty``1(System.String)">
            <summary>
            Gets the property value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name">The name of the property.</param>
            <returns></returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetProperties">
            <summary>
            Get all properites.
            </summary>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetAssociatedImageNames">
            <summary>
            Get the array of names of associated images. 
            </summary>
            <returns>The array of names of associated images.</returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.TryGetAssociatedImageDimensions(System.String,OpenSlideSharp.ImageDimension@)">
            <summary>
            Gets the dimensions of the associated image.
            </summary>
            <param name="name">The name of the associated image.</param>
            <param name="dimensions">The dimensions of the associated image.</param>
            <returns>True if the associated image of the specified name exists. Otherwise, false.</returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetAssociatedImageDimensions(System.String)">
            <summary>
            Gets the dimensions of the associated image.
            </summary>
            <param name="name">The name of the associated image.</param>
            <returns>The dimensions of the associated image.</returns>
            <exception cref="T:OpenSlideSharp.OpenSlideException"/>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.TryGetAssociatedImage(System.String,OpenSlideSharp.AssociatedImage@)">
            <summary>
            Copy pre-multiplied BGRA data from an associated image.
            </summary>
            <param name="name">The name of the associated image.</param>
            <param name="image">The associated image.</param>
            <returns>The pixel data of the associated image.</returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetAssociatedImage(System.String)">
            <summary>
            Copy pre-multiplied BGRA data from an associated image.
            </summary>
            <param name="name">The name of the associated image.</param>
            <returns></returns>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.GetAssociatedImages">
            <summary>
            Get all associated images.
            </summary>
            <returns></returns>
        </member>
        <member name="P:OpenSlideSharp.OpenSlideImage.LibraryVersion">
            <summary>
            Get the version of the OpenSlide library.
            </summary>
            <return>A string describing the OpenSlide version.</return> 
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:OpenSlideSharp.OpenSlideImage.Dispose">
            <summary>
            </summary>
        </member>
    </members>
</doc>
